name: Silverstripe CMS CI Database step
description: Run PHPUnit test for a Siverstripe CMS module
inputs:
  driver:
    description: Which Database to use
    required: true
    default: mysql
  version:
    description: Which version to use
    required: false
    default: latest
  installPackage:
    description: When using a DB without built-in support, whether to install the matching module
    required: false
    default: true

runs:
  using: "composite"
  steps:  
  
    # Catch all failure statement  
    - name: Validate DB driver
      if: "!contains('mysql mariadb postgresql mssql sqlite', inputs.driver)"
      uses: actions/github-script@v3
      with:
        script: core.setFailed('${{ inputs.driver }} is not a supported Database')

    
    - name: Kill local MySQL instance
      if: runner.os == 'Windows'
      run: sudo service mysql stop
      shell: bash
      
      
    # MySQL/MariaDB set up  
    - name: Set up MySQL
      if: inputs.driver == 'mysql'
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql version: ${{ inputs.version || 'latest' }}
        mysql root password: root

    - name: Set up MariaDB
      if: inputs.driver == 'mariadb'
      uses: getong/mariadb-action@v1.1
      with:
        mariadb version: ${{ inputs.version || 'latest' }}
        mysql root password: root

    - name: Wait for MySQL/MariaDB
      if: inputs.driver == 'mysql' || inputs.driver == 'mariadb'
      run: |
        while ! mysqladmin ping --host=127.0.0.1 --password=root --silent; do
          sleep 1
        done
      shell: bash

    - name: Create test database
      if: inputs.driver == 'mysql' || inputs.driver == 'mariadb'
      run: mysql -h127.0.0.1 -uroot -proot -e "create database SS_mysite;"
      shell: bash

    - name: Export Connection settings
      if: inputs.driver == 'mysql' || inputs.driver == 'mariadb'
      run: |
        echo "SS_DATABASE_CLASS=MySQLDatabase" >> $GITHUB_ENV
        echo "SS_DATABASE_USERNAME=root" >> $GITHUB_ENV
        echo "SS_DATABASE_PASSWORD=root" >> $GITHUB_ENV
        echo "SS_DATABASE_SERVER=127.0.0.1" >> $GITHUB_ENV
        echo "SS_DATABASE_NAME=SS_mysite" >> $GITHUB_ENV
        echo "SS_DATABASE_PORT=3306" >> $GITHUB_ENV
      shell: bash
      
    # PostgreSQL set up
    - name: Set up PostgreSQL
      if: inputs.driver == 'postgresql'
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: ${{ inputs.version || 'latest' }}
        postgresql db: postgres
        postgresql user: postgres
        postgresql password: postgres
        
    - name: Install PostgreSQL module
      if: inputs.driver == 'postgresql' && inputs.installPackage == 'true'
      run: composer require silverstripe/postgresql ^2 --prefer-stable --quiet
      shell: bash
        
    - name: Wait for PostgreSQL
      if: inputs.driver == 'postgresql'
      env:
        PGPASSWORD: postgres
      run: |
        while ! psql -U postgres -d postgres -h 127.0.0.1 --quiet -c "SELECT version()"; do
          sleep 1
        done
      shell: bash
      
    - name: Export Connection settings
      if: inputs.driver == 'postgresql'
      run: |
        echo "SS_DATABASE_CLASS=PostgreSQLDatabase" >> $GITHUB_ENV
        echo "SS_DATABASE_USERNAME=postgres" >> $GITHUB_ENV
        echo "SS_DATABASE_SERVER=127.0.0.1" >> $GITHUB_ENV
        echo "SS_DATABASE_NAME=postgres" >> $GITHUB_ENV
        echo "SS_DATABASE_PASSWORD=postgres" >> $GITHUB_ENV
        echo "SS_DATABASE_PORT=5432" >> $GITHUB_ENV
      shell: bash
    
    # MS SQL
    - name: Set up MS SQL
      uses: potatoqualitee/mssqlsuite@v1
      if: inputs.driver == 'mssql'
      with:
        install: sqlengine, sqlpackage
        sa-password: c0MplicatedP@ssword
    
    - name: Install MS SQL module
      if: inputs.driver == 'mssql' && inputs.installPackage == 'true'
      run: composer require silverstripe/mssql ^2 --prefer-stable --quiet
      shell: bash
        
    - name: Wait for MS SQL
      if: inputs.driver == 'mssql'
      run: |
        while ! sqlcmd -S localhost -U sa -P c0MplicatedP@ssword -d tempdb -Q "SELECT @@version;"; do
          sleep 1
        done
      shell: bash
      
    - name: Export Connection settings
      if: inputs.driver == 'mssql'
      run: |
        echo "SS_DATABASE_CLASS=MSSQLDatabase" >> $GITHUB_ENV
        echo "SS_DATABASE_USERNAME=sa" >> $GITHUB_ENV
        echo "SS_DATABASE_SERVER=127.0.0.1" >> $GITHUB_ENV
        echo "SS_DATABASE_NAME=tempdb" >> $GITHUB_ENV
        echo "SS_DATABASE_PASSWORD=c0MplicatedP@ssword" >> $GITHUB_ENV
        echo "SS_DATABASE_PORT=1433" >> $GITHUB_ENV
      shell: bash

    # SQLite
    - name: Set up SQLite
      if: inputs.driver == 'sqlite'
      run: |
        mkdir -p database
        touch database/database.sqlite
      shell: bash
    
    - name: Install MS SQL module
      if: inputs.driver == 'sqlite' && inputs.installPackage == 'true'
      run: composer require silverstripe/sqlite3 ^2 --prefer-stable --quiet
      shell: bash
        
    - name: Export Connection settings
      if: inputs.driver == 'sqlite'
      run: |
        echo "SS_DATABASE_CLASS=SQLite3Database" >> $GITHUB_ENV
        echo "SS_DATABASE_USERNAME=root" >> $GITHUB_ENV
        echo "SS_DATABASE_NAME=SS_mysite" >> $GITHUB_ENV
        echo "SS_DATABASE_PASSWORD=" >> $GITHUB_ENV
        echo "SS_SQLITE_DATABASE_PATH=`pwd`/database/database.sqlite" >> $GITHUB_ENV
      shell: bash
